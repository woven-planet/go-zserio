{{- $scope := .pkg }}
{{- $name := .name }}
{{- $native := .native }}
{{- $isarray := .isarray }}
{{- if and (not $native.IsMarshaler) (not $isarray)}}
    {{- if gt $native.Type.Bits 0 }}
        endBitPosition += {{- $native.Type.Bits }}
    {{- else if $native.Type.LengthExpression }}
        endBitPosition += int({{- goExpression $scope $native.Type.LengthExpression }})
    {{- else }}
        {{- if eq $native.Type.Name "uint8" }} endBitPosition += 8
        {{- else if eq $native.Type.Name "uint16" }} endBitPosition += 16
        {{- else if eq $native.Type.Name "uint32" }} endBitPosition += 32
        {{- else if eq $native.Type.Name "uint64" }} endBitPosition += 64
        {{- else if eq $native.Type.Name "int8" }} endBitPosition += 8
        {{- else if eq $native.Type.Name "int16" }} endBitPosition += 16
        {{- else if eq $native.Type.Name "int32" }} endBitPosition += 32
        {{- else if eq $native.Type.Name "int64" }} endBitPosition += 64
        {{- else if eq $native.Type.Name "bool" }} endBitPosition += 1
        {{- else if eq $native.Type.Name "float16" }} endBitPosition += 16
        {{- else if eq $native.Type.Name "float32" }} endBitPosition += 32
        {{- else if eq $native.Type.Name "float64" }} endBitPosition += 64
        {{- else if eq $native.Type.Name "extern" }} endBitPosition += int({{ $name }}.BitSize)
        {{- else }}
            if delta, err := 
            {{- if eq $native.Type.Name "varuint" }} ztype.UnsignedBitSize({{ $name }}, 9)
            {{- else if eq $native.Type.Name "varuint16" }} ztype.UnsignedBitSize(uint64({{ $name }}), 2)
            {{- else if eq $native.Type.Name "varuint32" }} ztype.UnsignedBitSize(uint64({{ $name }}), 4)
            {{- else if eq $native.Type.Name "varuint64" }} ztype.UnsignedBitSize({{ $name }}, 8)
            {{- else if eq $native.Type.Name "varsize" }} ztype.UnsignedBitSize({{ $name }}, 5)
            {{- else if eq $native.Type.Name "varint" }} ztype.SignedBitSize({{ $name }}, 9)
            {{- else if eq $native.Type.Name "varint16" }} ztype.SignedBitSize(int64({{ $name }}), 2)
            {{- else if eq $native.Type.Name "varint32" }} ztype.SignedBitSize(int64({{ $name }}), 4)
            {{- else if eq $native.Type.Name "varint64" }} ztype.SignedBitSize({{ $name }}, 8)
            {{- else if eq $native.Type.Name "string" }} ztype.BitSizeOfString({{ $name }})
            {{- end }}; err != nil {
                return 0, err
            } else {
                endBitPosition += delta
            }
        {{- end}}
    {{- end }}
{{- else }}
    if delta, err := {{ $name }}.ZserioBitSize(endBitPosition); err != nil {
        return 0, err
    } else {
        endBitPosition += delta
    }
{{- end }}